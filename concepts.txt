
/**************************************** Filters :- 

--> Builtin Filters:-

1) uppercase , lowercase used with strings
2) number :- to format number can be used as number:2 to get number after 2 decimal places
3) currency :- to formate currency
4) date :- to format the original javascript date. date:'mediumDate'.
5) json :- used to print objects in json format only. 
6) orderBy  :- used with ng-repeat to sort the results in ascending order a/c to param passed. eg. orderBy:sortOrder.
               where sortOrder may be any param of repeated items. To sort in descending order put - in front of param value.
7) limitTo  :- filter is used with ng-repeat to limit the number of items in ng-repeat. eg. limitTo:2 will limit the results number to 2.
8) filter   :- filter filter is used to filter the result. By default angular will search the value of items in ng-repeat
                to match the query if not explicitly specified.If specified it will search for that property of items.

--> Custom Filter :-

    eventsApp.filter('filterName',function(){
        return function(args){
            // filtering logic and return goes here.
        }
    })

--> ng-touched class applies to form-field if we have focusedin and then focusedout of it.
--> ng-pristine class applies to a field if its value is not changed even once.
--> ng-dirty class gets applied if form field value is modified.
--> ng-valid and ng-invalid if form field is valid or invalid.


/*********************************************************************************   SERVICES   **************************************************************************************************/

--> A service is just a worker object that performs some sort of business logic.
--> Services allow you to encapsulate Reusable business logic into an object that can be shared and reused throughout the application.
--> Services also helps in bringing modularity into app. Single Responsibility Principle.states that an object should only have a Single
    responsibility.
--> Services can be injected to controllers and other services that need them.This helps in having access to the functionality when u need 
    them.


--> $resource service functionality is used for same sort as of $http but it is based on restful artitecture. It assumes that your web server is using rest based artitecture.
--> $resource is in a different module ie. ngResource module so to use $resource we need to add ngResource module in our app.js in dependency array and then we also need to include
    angular.resource.js in html file.
--> $resource doesn't returns a promise but it contains $promise property which we can use as promise by calling then on that property.
--> $resource('/data/:id',{id:'@id'}).get({id:1})   :- get() {method:'GET'}
--> $resource('/data/:id',{id:'@id'}).save(event)   :- save() {method:'POST'} is used to post the data ie. in this case data is event.
--> $resource('/data/:id',{id:'@id'}).query({id:1}) :- {method: 'GET', isArray: true} same as get but it expects an array to be returned.


/**************************************************************   ROUTING   **************************************************************************************************/

--> ng-view element is used in index page where all templates gets rendered a/c to routes configured in config block.
--> config block can be added to each module which contains all configuration and routing for that module.
    config block gets trigger at time of bootstraping that module.

--> Routing is provided using $routeProvider service which is in ngRoute module which we need to import as module dependency.
--> $routeProvider.when() is used to config routes and then mention the templateUrl and controller for that route.
    $routeProvider.otherwise() is used to redirectTo some other config route if request URL do not matches any.
--> $routeParams service is used to get any value from url and then pass it to other functions.

--> $route service allows us to access various things about route such as custom properties, pathParams and queryString.
    $route.current.propertyName is used to access the custom route property. Custom route property is set on route while configuring
    route using when.
    To access the queryString we use $route.current.params.propertyName.

    $route.current.propertyName is used to access the property on route.
    $route.current.params.propertyName is used to access properties from both queryString and route params whereas
    $route.current.pathParams.propertyName can be used only to access route params not params from queryString.
    $route.reload() is used to reload the view without reloading the whole page.

--> $locationProvider service is used to enable the HTML5 routing. ie. in config block we need to add 
    $locationProvider.html5Mode(true)
    Then we also need to add <base href="/" /> in head of index.html